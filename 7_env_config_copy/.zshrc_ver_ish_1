#PROMPT=%(?.%F{green}⭐️.%F{red}?%?)%f #%B%F{140}%3~%f%b

#PROMPT="
#%{$terminfo[bold]$fg[yellow]%}%~%{$reset_color%}\
#    ${hg_info}\
#    ${git_info}\
#    ${svn_info}\
#    ${venv_info}\
#     \
#     %{$terminfo[bold]$fg[red]%}$ %{$reset_color%}"

#PS1='%(?,%F{yello},%F{red})%n@%, %1~ %#%f '
#开启颜色
autoload -U colors && colors      
#每次刷新提示符
setopt prompt_subst

##配置提示符模式。。 其实配置以前的PS1也是能够的 可是为了尊重说明文档。。。
#PROMPT="%{$fg[red]%}%n %{$reset_color%}@ %{$fg[yellow]%}%m %{$fg[default]%}%1|%~ %{$reset_color%}%  👉  "        
##在行末显示上一命令的返回状态
#RPROMPT="[%{$fg_bold[yellow]%}%?%{$reset_color%}] "

# 3rd one
PROMPT='❰ %{$fg[yellow]%}%n%{$reset_color%} | %{$fg[red]%}%1~%{$reset_color%}%{$fg[blue]%}$(git branch --show-current 2&> /dev/null | xargs -I branch echo "(branch)")%{$reset_color%} ❱ '



alias ll="ls -l"
alias la="ls -la"
#alias cat="batcat"

### ZSH HOME
export ZSH=$HOME/.zsh

#### ---- history config ----------
export HISTFILE=$ZSH/.zsh_history
#
## How many commands zsh will load to memory.
export HISTSIZE=10000
#
## How maney commands history will save on file.
export SAVEHIST=10000
#
## History won't save duplicates.
setopt HIST_IGNORE_ALL_DUPS
#
## History won't show duplicates on search.
setopt HIST_FIND_NO_DUPS

#source $ZSH/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
fpath=($ZSH/plugins/zsh-completions/src $fpath)

# zsh-autosuggestions:config
 source $ZSH/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bg=cyan,bold,underline"
 ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=yellow,bg=black,bold,underline"
 ZSH_AUTOSUGGEST_STRATEGY=(history completion)
 ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20

# end config

#export PS1="my zsh ps1> "
#
#==============================================================================================
if command -v tmux &> /dev/null; then
  [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && tmux
  fi

#===============================================================================================

#Install Starship-commendline
#eval "$(starship init zsh)"
#eval "$(command /usr/bin/starship init zsh)"


# 关闭ZSH前会先执行 git push 的命令,然后再关闭    
# 可追加指定目录:  || $(git rev-parse --show-toplevel 2>/dev/null) =~ "$HOME/my_a" || $(git rev-parse --show-toplevel 2>/dev/null) =~ "$HOME/jinn/my_b"     

function exit_zsh() {    
  if [[ $(git rev-parse --show-toplevel 2>/dev/null) =~ "$HOME/coding_jinn_test" ]]; then    
    git add .    
    git commit -m "updated"    
    git push    
  fi    
  exit    
}
    
trap 'exit_zsh' EXIT  


#======git push function
# git function    
function gdo() {    
  if [ "$#" -eq 0 ]; then    
    echo "Please provide commit message"    
    return 1    
  fi    
  git add .    
  git commit -m "$*"    
  git push    
}    
    
alias gdo='gdo'

